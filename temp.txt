A5 Part D: Procedural SQL Applications in the Final Project
Collaboration: None
Final Project Topic: Supermarket Inventory and Sales Analysis

Part D Answers:
UDF(s): reorder_ratio(product_id INT) -> RETURNS DECIMAL(5,2)
  This function calculates the ratio of orders for a given product that are 
  marked as reorders. It does so by dividing the count of orders where 
  reordered = 1 by the total number of orders for that product. This would 
  be useful information for supermarkets as a metric of popularity of a 
  product.

  A UDF is ideal here because it returns a single scalar value that can 
  be directly used within SELECT queries for reporting purposes. 
  Encapsulating this logic in a function avoids repeating complex subqueries 
  across multiple reports, thus simplifying query maintenance.

Procedure: sp_create_order(p_user_id INT, p_order_dow TINYINT, 
p_order_hour_of_day TINYINT, p_days_since_prior_order FLOAT, 
p_product_ids TEXT)
  This procedure creates a new order by inserting a record into the 
  orders table and then, based on a provided comma‚Äêseparated list of 
  product IDs, it inserts corresponding entries into the order_products 
  table. It is best implemented as a procedure because it encapsulates 
  multiple, interdependent DML operations (inserting into two tables and 
  iterating over a list of products) into one transactional unit, thereby 
  ensuring data consistency and reducing application-side complexity. The 
  procedure assumes that the product ids are in order, so it will just 
  incremenet for add_to_cart_order, in the order that the product ids 
  show up in the list.


Triggers: trg_update_aisle_stats row-based AFTER INSERT trigger on 
the order_products table
  This trigger is defined to fire AFTER an INSERT operation on the 
  order_products table. For each new row inserted, the trigger 
  retrieves the associated aisle_id from the products table (via 
  the product_id in the new row) and then updates the materialized 
  view "aisle stats" - for example, by incrementing the count of 
  products sold (or orders processed) for that aisle. This ensures 
  that the MV always reflects the most recent sales data per aisle, 
  which is critical for real-time analytics and decision-making in 
  the grocery store environment.
